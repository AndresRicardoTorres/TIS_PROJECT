<%= form_for([@project, @user_history, @estimation]) do |f| %>

<% if @estimation.errors.any? %>
<div id="error_explanation">
	<h2><%= pluralize(@estimation.errors.count, "error") %> prohibited this estimation from being saved:</h2>

	<ul>
		<% @estimation.errors.full_messages.each do |msg| %>
		<li>
			<%= msg %>
		</li>
		<% end %>
	</ul>
</div>
<% end %>


<%=f.fields_for :metric_parameters do |builder| %>

<div data-role="collapsible" data-theme="b" data-content-theme="b">
	<%= builder.hidden_field :name %>
	<%= builder.hidden_field :description %>
	<%= builder.hidden_field :weight %>
	<h2><%= builder.object.description %> </h2>
	<div class="ui-grid-b">
		<div class="ui-block-a">
			<%= builder.label :optimistic_value %>
			
			<%= builder.text_field :optimistic_value  , :class =>"metric_optimistic_value"%>
		</div>
		<div class="ui-block-b">
			<%= builder.label :probable_value %>
			
			<%= builder.text_field :probable_value , :class =>"metric_probable_value"%>
		</div>
		<div class="ui-block-c">
			<%= builder.label :pessimistic_value %>
			
			<%= builder.text_field :pessimistic_value , :class =>"metric_pessimistic_value"%>
		</div>
	</div><!-- /grid-b -->

	<div class="ui-grid-b">
		<div class="ui-block-a">
			<%= builder.label :value %>
			
			<%= builder.text_field :value , :disabled=>true , :class =>"metric_value"%>
		</div>
		<div class="ui-block-b">
			<%= builder.label :weight %>
			
			<%= builder.text_field :weight, :disabled=>true ,:class =>"metric_weight"%>
		</div>
		<div class="ui-block-c">
			<%= builder.label :quantity %>
			
			<%= builder.text_field :quantity , :disabled=>true,:class =>"metric_quantity"%>
		</div>
	</div><!-- /grid-b -->
</div>
<% end %>

<div class="field" data-role="fieldcontain">
	<label><h3>Functinal Integration Total - Persistence Unadjusted </h3></label>
	<%= f.text_field :total_metrics,  :disabled=>true%>
</div>

<div data-role="content">
	<div id="selects_parametros" class='invisible'>
		<%= f.collection_select :business_logic_associated_parameter_id, @bus_logic, :id, :value , {},{:class=>'invisible',:id => 'valores_business'}%>
		<%= f.collection_select :code_gen_help_parameter_id, @code_gen_help, :id, :value ,{} ,{:class=>'invisible' , :id => 'valores_code'}%>
		<%= f.collection_select :dev_exp_parameter_id, @developer_exp, :id, :value , {},{:class=>'invisible', :id => 'valores_exp'}%>
		</div>
	<ul  data-role="listview" data-split-theme="b">
		<li>
			<h3>Associated Business Logic: </h3>
			<%= f.collection_select :business_logic_associated_parameter_id, @bus_logic, :id, :label %>
			
		</li>
		<li>
			<h3>Help With Code Generator : </h3>
			<%= f.collection_select :code_gen_help_parameter_id, @code_gen_help, :id, :label%>
			
		</li>
		<li>
			<h3>Developer Experience : </h3>
			<%= f.collection_select :dev_exp_parameter_id, @developer_exp, :id, :label%>
			
		</li>
		
	</ul>
</div>

<div class="field" data-role="fieldcontain">
	<label><h3>Total Functional Integration - Persistence </h3></label>	
	<%= f.text_field :total_complexity, :disabled=>true %>
</div>

<div data-role="content">
	<ul  data-role="listview" data-split-theme="b">
		<li>
			<h3>Screen Type : </h3>

			<%  #f.grouped_collection_select(:view_type_parameter_id,@viewtypes,:name,:description,:id,:label)%>

			<select id="estimation_view_type_parameter_id" name="estimation[view_type_parameter_id]">

				<% @view_types.each do |name,view_type|

				%>
				<optgroup label="<%= name %>">
					<% view_type.each do |value| %>
					<option value="<%= value.id%>" valor="<%= value.value %>"
					<% if value.id == @estimation.view_type_parameter_id %>
					selected="selected"
					<% end %>><%= value.label%></option>
					<% end %>
				</optgroup>
				<% end %>

			</select>
		</li>
	</ul>

</div>

<div class="field" data-role="fieldcontain">
	<label><h3>Screen Complexity Factor </h3></label>		
	<%= f.text_field :view_type_factor , :readonly=>true , :class=>'ui-disabled mobile-textinput-disabled ui-state-disabled'%>
</div>

<div class="field" data-role="fieldcontain">
	<%= f.label :percentage_reuse %>	
	<%= f.text_field :percentage_reuse , :type=>'range',:min=>"0" , :max=>"100" %>
</div>

<div class="field" data-role="fieldcontain">
	<%= f.label :total_web_points %>	
	<%= f.text_field :total_web_points ,:readonly=>true , :class=>'ui-disabled mobile-textinput-disabled ui-state-disabled'%>
</div>

<div class="field" data-role="fieldcontain">
	<%= f.label :effort %>	
	<%= f.text_field :effort ,:readonly=>true , :class=>'ui-disabled mobile-textinput-disabled ui-state-disabled'%>
</div>

<div class="actions">
	<%= f.submit %>
</div>
<% end %>

<script>

if (typeof cargado == 'undefined')cargado=false;
if(!cargado){
$(document).on('pageshow',function(event, ui){
cargado=true;
///Elimino div de formularios invisibles
//console.log($('body > div.ui-page').not(':visible'));
$('body > div.ui-page').not(':visible').remove();
	
//Se esconden los combos que tienen los valores y los mongoid	
$('.invisible').hide();


//Se calcula el esfuerzo


$('.ui-page-active #estimation_total_web_points').change(function(){
	
	var WEB = parseFloat($(this).val());
	var E = 14.95 * Math.pow(WEB,0.66);
	$('.ui-page-active #estimation_effort').val(E); 
});

///Se calculan los puntos web totales
$('.ui-page-active #estimation_total_complexity,.ui-page-active select[id="estimation_view_type_parameter_id"],.ui-page-active #estimation_percentage_reuse').change(function(){
	var TIFP = parseFloat($('#estimation_total_complexity').val());
	var FTP = parseFloat($('select[id="estimation_view_type_parameter_id"]').val());
	var REUT = parseFloat($('#estimation_percentage_reuse').val());
	REUT=isNaN(REUT)?0:REUT;
	var WEB = (TIFP * FTP) * ((100-REUT)/100);
	$('.ui-page-active #estimation_total_web_points').val(WEB).change();	
});

///Configura el factor de tipo de vista	
$('.ui-page-active select[id="estimation_view_type_parameter_id"]').change(function(){
	var valor = $(this).find('option:selected').attr('valor');
	$('.ui-page-active input[id="estimation_view_type_factor"]').val(valor);
}).change();


//Se calcula TIFP
$('.ui-page-active select[id="estimation_business_logic_associated_parameter_id"],.ui-page-active select[id="estimation_code_gen_help_parameter_id"],.ui-page-active select[id="estimation_dev_exp_parameter_id"],#estimation_total_metrics').change(function(){
	
	var business_id = $('select[id="estimation_business_logic_associated_parameter_id"] option:selected').val();
	var code_id = $('select[id="estimation_code_gen_help_parameter_id"] option:selected').val();
	var experience_id = $('select[id="estimation_dev_exp_parameter_id"] option:selected').val();
	
	
	var business = parseFloat($('#valores_business option[value="'+business_id+'"]').html());
	var code = parseFloat($('#valores_code option[value="'+code_id+'"]').html());
	var experience = parseFloat($('#valores_exp option[value="'+experience_id+'"]').html());
	
	var TIFPS = parseFloat($('#estimation_total_metrics').val());
	
	var TIFP = TIFPS * experience * code * business;
	
	$('.ui-page-active #estimation_total_complexity').val(isNaN(TIFP)?0:TIFP).change();	
});

//Se calcula el TIFPS
$('.ui-page-active .metric_quantity').change(function(){
	
	var TIFPS = 0;
	$('.metric_quantity').each(function(k,v){
		TIFPS+=parseFloat($(v).val());
	});
	
	$('.ui-page-active #estimation_total_metrics').val(TIFPS).change();
});


//Se calcula la cantidad de las metricas
$('.ui-page-active .metric_value').change(function(){
	
	var divMetrica = $(this).parent().parent().parent();
	
	var valor = parseFloat($(this).val());	
	
	var weight = parseFloat(divMetrica.find('.metric_weight').val());
	
	var quantity = valor  * weight;
	divMetrica.find('.metric_quantity').val(quantity).change();
});

///Se calcula el valor de las metricas
$('.ui-page-active .metric_optimistic_value,.metric_probable_value,.metric_pessimistic_value').change(function(){
	
	var divMetrica = $(this).parent().parent().parent();
	var optimistic = parseFloat(divMetrica.find('.metric_optimistic_value').val());
	optimistic = isNaN(optimistic)?0:optimistic;
	var probable = parseFloat(divMetrica.find('.metric_probable_value').val());
	probable = isNaN(probable)?0:probable;
	var pessimistic = parseFloat(divMetrica.find('.metric_pessimistic_value').val());
	pessimistic = isNaN(pessimistic)?0:pessimistic;
	var valor = (optimistic+(4*probable)+pessimistic)/6;
	
	divMetrica.find('.metric_value').val(valor).change();	
}).change();



});}
</script>
